# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "AUTH TO CLOUD"
          command: "echo AWS_ACCESS_KEY_ID: $AWS_KEY"
      - run:
          name: "Gitlab Parameters"
          command: |
            echo "pipeline.trigger_parameters.circleci.actor_id: << pipeline.trigger_parameters.circleci.actor_id >>"
            echo "pipeline.trigger_parameters.gitlab.type: << pipeline.trigger_parameters.gitlab.type >>"
            echo "pipeline.trigger_parameters.gitlab.project_id: << pipeline.trigger_parameters.gitlab.project_id >>"
            echo "pipeline.trigger_parameters.gitlab.ref: << pipeline.trigger_parameters.gitlab.ref >>"
            echo "pipeline.trigger_parameters.gitlab.checkout_sha: << pipeline.trigger_parameters.gitlab.checkout_sha >>"
            echo "pipeline.trigger_parameters.gitlab.user_id: << pipeline.trigger_parameters.gitlab.user_id >>"
            echo "pipeline.trigger_parameters.gitlab.user_name: << pipeline.trigger_parameters.gitlab.user_name >>"
            echo "pipeline.trigger_parameters.gitlab.user_username: << pipeline.trigger_parameters.gitlab.user_username >>"
            echo "pipeline.trigger_parameters.gitlab.user_avatar: << pipeline.trigger_parameters.gitlab.user_avatar >>"
            echo "pipeline.trigger_parameters.gitlab.repo_name: << pipeline.trigger_parameters.gitlab.repo_name >>"
            echo "pipeline.trigger_parameters.gitlab.repo_url: << pipeline.trigger_parameters.gitlab.repo_url >>"
            echo "pipeline.trigger_parameters.gitlab.web_url: << pipeline.trigger_parameters.gitlab.web_url >>"
            echo "pipeline.trigger_parameters.gitlab.commit_sha: << pipeline.trigger_parameters.gitlab.commit_sha >>"
            echo "pipeline.trigger_parameters.gitlab.commit_title: << pipeline.trigger_parameters.gitlab.commit_title >>"
            echo "pipeline.trigger_parameters.gitlab.commit_message: << pipeline.trigger_parameters.gitlab.commit_message >>"
            echo "pipeline.trigger_parameters.gitlab.commit_timestamp: << pipeline.trigger_parameters.gitlab.commit_timestamp >>"
            echo "pipeline.trigger_parameters.gitlab.commit_author_name: << pipeline.trigger_parameters.gitlab.commit_author_name >>"
            echo "pipeline.trigger_parameters.gitlab.commit_author_email: << pipeline.trigger_parameters.gitlab.commit_author_email >>"
            echo "pipeline.trigger_parameters.gitlab.total_commits_count: << pipeline.trigger_parameters.gitlab.total_commits_count >>"
            echo "pipeline.trigger_parameters.gitlab.branch: << pipeline.trigger_parameters.gitlab.branch >>"
            echo "pipeline.trigger_parameters.gitlab.default_branch: << pipeline.trigger_parameters.gitlab.default_branch >>"
            echo "pipeline.trigger_parameters.gitlab.x_gitlab_event_id: << pipeline.trigger_parameters.gitlab.x_gitlab_event_id >>"
            echo "pipeline.trigger_parameters.gitlab.is_fork_merge_request: << pipeline.trigger_parameters.gitlab.is_fork_merge_request >>"
      - run:
          name: "GitHub-BB Parameters"
          command: |
            echo "pipeline.project.git_url: << pipeline.project.git_url >>"
            echo "pipeline.git.tag: << pipeline.git.tag >>"
            echo "pipeline.git.branch: << pipeline.git.branch >>"
            echo "pipeline.schedule.name: << pipeline.schedule.name >>"



# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
